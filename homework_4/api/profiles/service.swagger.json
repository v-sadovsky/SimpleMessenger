{
  "swagger": "2.0",
  "info": {
    "title": "User profiles service",
    "version": "1.0",
    "contact": {
      "name": "gRPC-Gateway project",
      "url": "https://github.com/grpc-ecosystem/grpc-gateway",
      "email": "none@example.com"
    },
    "license": {
      "name": "BSD 3-Clause License",
      "url": "https://github.com/grpc-ecosystem/grpc-gateway/blob/main/LICENSE"
    }
  },
  "tags": [
    {
      "name": "ProfilesService"
    }
  ],
  "host": "localhost:8080",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/profiles": {
      "get": {
        "summary": "ListProfiles - list all users",
        "operationId": "ProfilesService_ListProfiles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/homework_4ListProfilesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ids - массив идентификаторов пользователей",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uint64"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ProfilesService"
        ]
      },
      "post": {
        "summary": "SaveProfileRequest - save a user profile",
        "operationId": "ProfilesService_SaveProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/homework_4SaveProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "info",
            "description": "info - информация о пользователе",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/homework_4UserInfo"
            }
          }
        ],
        "tags": [
          "ProfilesService"
        ]
      }
    },
    "/api/v1/profiles/{id}": {
      "get": {
        "summary": "GetProfile - get user profile by id",
        "operationId": "ProfilesService_GetProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/homework_4GetProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "id - уникальный идентификатор пользователя",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ProfilesService"
        ]
      }
    }
  },
  "definitions": {
    "homework_4GetProfileResponse": {
      "type": "object",
      "properties": {
        "profile": {
          "$ref": "#/definitions/homework_4Profile",
          "title": "profile - user profile"
        }
      },
      "title": "GetProfileResponse - ответ  GetProfile"
    },
    "homework_4ListProfilesResponse": {
      "type": "object",
      "properties": {
        "profiles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/homework_4Profile"
          },
          "title": "profiles - a list of user profiles"
        }
      },
      "title": "ListProfilesResponse - ответ ListProfiles"
    },
    "homework_4Profile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id - уникальный идентификатор пользователя"
        },
        "info": {
          "$ref": "#/definitions/homework_4UserInfo",
          "title": "info - данные пользователя"
        }
      },
      "title": "Profile - full user model"
    },
    "homework_4SaveProfileResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "id - уникальный идентификатор пользователя"
        }
      },
      "title": "SaveProfileResponse - ответ SaveProfile"
    },
    "homework_4UserInfo": {
      "type": "object",
      "example": {
        "name": "user_1",
        "email": "user1@test.gmail.com",
        "password": "qwerty",
        "photo": "https://my_storage.my_photo"
      },
      "properties": {
        "name": {
          "type": "string",
          "title": "name - имя пользователя"
        },
        "email": {
          "type": "string",
          "title": "email - почта пользователя"
        },
        "password": {
          "type": "string",
          "title": "password - пароль пользователя"
        },
        "photo": {
          "type": "string",
          "title": "photo - ссылка на фото пользователя"
        }
      },
      "description": "UserInfo - информация о пользователе",
      "title": "UserInfo",
      "externalDocs": {
        "description": "Find out more about ABitOfEverything",
        "url": "https://github.com/grpc-ecosystem/grpc-gateway"
      },
      "required": [
        "name",
        "email",
        "password"
      ]
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "More about gRPC-Gateway",
    "url": "https://github.com/grpc-ecosystem/grpc-gateway"
  }
}
